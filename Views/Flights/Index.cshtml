@model MvcFlight.Models.FlightAirportViewModel

@{
    ViewData["Title"] = "All Flights";
}

<h1>All Flights</h1>

<p>
    <a asp-action="Create">Create A New Flight</a>
</p>

<form asp-controller="Flights" asp-action="Index" method="get">
    @* Eventually change this to search by passenger name *@
    <p>
        <select asp-for="FlightAirport" asp-items="Model.Airports">
            <option value="">All</option>
        </select>
        Airline: <input type="text" name="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>
<table class="table text-white">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Flights![0].Airline)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Flights![0].Departs)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Flights![0].Airport)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Flights![0].FlightNo)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Flights!) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Airline)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Departs)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Airport)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FlightNo)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
