name: Build and deploy ASP.Net Core app to Azure Web App - FlightsManagerDOTNet

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore dotnet-flights-mvc.generated.sln

      - name: Build with dotnet
        run: dotnet build dotnet-flights-mvc.generated.sln --configuration Release

      - name: dotnet publish
        run: dotnet publish dotnet-flights-mvc.generated.sln --configuration Release

      - name: List build output
        run: ls -R ./bin/Release
      
      - name: Install dotnet ef
        run: dotnet tool install -g dotnet-ef --version 8.*

      - name: Create migrations bundle
        run: dotnet ef migrations bundle --runtime linux-x64 -o ${{env.DOTNET_ROOT}}/myapp/migrationsbundle

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ./bin/Release/net8.0/publish

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_3E7DCD0A29DF4F588321C0DCF0A92C3F }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_FB956C7EBC3D42398FB5EC107F4B4733 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_FFC1EC64601E4A698CC201F58E7EC0C4 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'FlightsManagerDOTNet'
          slot-name: 'Production'
          package: './bin/Release/net8.0/publish'
